# Импорт библиотек
# -----------------------------------------------------------------------------------------------------------------------
import matplotlib.pyplot
import numpy as np
import math
# -----------------------------------------------------------------------------------------------------------------------
# Инициализация переменных
# -----------------------------------------------------------------------------------------------------------------------
L = 3.15
b = 0.11
M = 3400
a1 = 0.25
E = 3200000000
I = 0.2760
K0 = 50000000
# -----------------------------------------------------------------------------------------------------------------------
# Расчет нужных значений
# -----------------------------------------------------------------------------------------------------------------------
EI = E*I
B = pow((K0 * b / (4 * EI)), 0.25)
# -----------------------------------------------------------------------------------------------------------------------
# Создание функций одной переменной
# -----------------------------------------------------------------------------------------------------------------------


def Y1(x1):
    return math.cosh(B * x1) * math.cos(B * x1)


def Y2(x2):
    return 0.5 * (math.cosh(B * x2) * math.sin(B * x2) + math.sinh(B * x2) * math.cos(B * x2))


def Y3(x3):
    return 0.5 * math.sinh(B * x3) * math.sin(B * x3)


def Y4(x4):
    return 0.25 * (math.cosh(B * x4) * math.sin(B * x4) - math.sinh(B * x4) * math.cos(B * x4))


# -----------------------------------------------------------------------------------------------------------------------
# Формирование двух массивов(матриц)
# -----------------------------------------------------------------------------------------------------------------------
A = np.array([[Y3(L) / (EI * pow(B, 2)), Y4(L) / (pow(B, 3) * EI)], [Y2(L) / (B * EI), Y3(L) / (EI * pow(B, 2))]])
B1 = np.array([M * Y3(L - a1) / (EI * pow(B, 2)), M * Y2(L - a1) / (EI * B)])
# -----------------------------------------------------------------------------------------------------------------------
# Решение СЛУ, и записываение решения в отдельные переменные
# -----------------------------------------------------------------------------------------------------------------------
N = np.linalg.solve(A, B1)
M0 = N[0]
Q0 = N[1]
# -----------------------------------------------------------------------------------------------------------------------
# Запеолнение массива x нужными значениями, а массивы
# -----------------------------------------------------------------------------------------------------------------------
x = np.linspace(0, 3.15, num=350)
y = []
fi = np.linspace(0, 3.15, num=350)
M1 = np.linspace(0, 3.15, num=350)
Q1 = np.linspace(0, 3.15, num=350)
# -----------------------------------------------------------------------------------------------------------------------
# Заполнение массивов y, fi, M1, Q1 нужжными значениями
# -----------------------------------------------------------------------------------------------------------------------
for i in x:
    if i < a1:
        y.append(((-Q0 * Y4(x[i]) / pow(B, 3)) - (M0 * Y3(x[i]) / pow(B, 2))) * (1 / EI))
        #fi[i] = (((-Q0 * Y3(x[i]) / pow(B, 2)) - (M0 * Y2(x[i]) / pow(B, 1))) / EI)
        #M1[i] = (M0 * Y1(x[i]) + Q0 * Y2(x[i]) / B)
        #Q1[i] = (-4 * M0 * B * Y4(x[i]) + Q0 * Y1(x[i]))
    else:
        y.append(((-Q0 * Y4(x[i]) / pow(B, 3)) - (M0 * Y3(x[i]) / pow(B, 2))) / EI + M * Y3(x[i] - a1) / (EI * pow(B, 2)))
        #fi[i] = (((-Q0 * Y3(x[i]) / pow(B, 2)) - (M0 * Y2(x[i]) / pow(B, 1))) / EI + M * Y2(x[i] - a1) / (EI * B))
        #M1[i] = (M0 * Y1(x[i]) + Q0 * Y2(x[i]) / B - M * Y1(x[i] - a1))
        #Q1[i] = (-4 * M0 * B * Y4(x[i]) + Q0 * Y1(x[i]) + 4 * M * B * Y4(x[i] - a1))
# -----------------------------------------------------------------------------------------------------------------------
# Построение графиков в разных окнах
# -----------------------------------------------------------------------------------------------------------------------
fig1, ax1 = matplotlib.pyplot.subplots()
ax1.plot(x, y)
fig2, ax2 = matplotlib.pyplot.subplots()
#ax2.plot(x, fi)
fig3, ax3 = matplotlib.pyplot.subplots()
#ax3.plot(x, M1)
fig4, ax4 = matplotlib.pyplot.subplots()
#ax4.plot(x, Q1)
matplotlib.pyplot.show()
# -----------------------------------------------------------------------------------------------------------------------
# Построение графика о одном окне
# -----------------------------------------------------------------------------------------------------------------------
fig = matplotlib.pyplot.figure()
ax_1 = fig.add_subplot(4, 1, 1)
ax_2 = fig.add_subplot(4, 1, 2)
ax_3 = fig.add_subplot(4, 1, 3)
ax_4 = fig.add_subplot(4, 1, 4)
ax_1.plot(x, y)
#ax_2.plot(x, fi)
#ax_3.plot(x, M1)
#ax_4.plot(x, Q1)
matplotlib.pyplot.show()
# -----------------------------------------------------------------------------------------------------------------------
